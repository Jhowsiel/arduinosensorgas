#include <SoftwareSerial.h>
#include <math.h>  // Para a função sin()

const int pinSensor = A0;   // Pino do Sensor de Gás
const int pinRele = 3;      // Pino do Relé
const int pinBuzzer = 8;    // Pino do Buzzer
const int valDesarm = 10;  // Limite para disparar o alarme

// Pinos de software serial para comunicação com o NodeMCU
SoftwareSerial softSerial(10, 11); // RX, TX (ajustado para pinos recomendados)

void setup() {
  Serial.begin(115200);        // Inicializa a porta Serial
  softSerial.begin(115200);    // Inicializa SoftwareSerial com 115200 bps
  pinMode(pinRele, OUTPUT);
  pinMode(pinBuzzer, OUTPUT);
  digitalWrite(pinRele, LOW); // Desliga o relé inicialmente
  noTone(pinBuzzer);          // Desliga o buzzer inicialmente

  Serial.println("Arduino: Iniciando...");
}

void loop() {
  int valorSensor = analisarSensorGas(pinSensor);
  
  Serial.print("Arduino: Valor do Sensor de Gás: ");
  Serial.println(valorSensor);

  if (valorSensor >= valDesarm) {
    Serial.println("Arduino: ALARME - Sensor acima do limite!");
    digitalWrite(pinRele, HIGH);
    softSerial.println("ALARME");  // Envia comando para o NodeMCU
    gerarAlarmeBuzzer();
  } else {
    digitalWrite(pinRele, LOW);
    noTone(pinBuzzer);
  }

  if (softSerial.available()) {
    String mensagemRecebida = softSerial.readStringUntil('\n');
    Serial.print("Arduino: Mensagem Recebida do NodeMCU: ");
    Serial.println(mensagemRecebida);
  }

  delay(3000);  // Atraso para a próxima leitura
}

int analisarSensorGas(int pin) {
  int leitura = analogRead(pin);        // Lê o valor do sensor
  if (leitura < 0 || leitura > 1023) {  // Verifica leitura válida
    Serial.println("Arduino: Erro na leitura do sensor!");
    return 0;
  }
  int valor = map(leitura, 0, 1023, 0, 100);  // Converte para porcentagem
  return valor;
}

void gerarAlarmeBuzzer() {
  for (int x = 0; x < 40; x++) {
    float sinVal = sin(x * (PI / 180));  // Calcula o valor seno
    int toneVal = 2000 + (int(sinVal * 1500));  // Calcula o tom
    analogWrite(pinBuzzer, toneVal);
    delay(200);
    noTone(pinBuzzer);
    delay(200);
  }
}
