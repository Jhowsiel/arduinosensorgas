const int pinSensor = A0; // Pino Sensor
const int pinRele = 3; // Pino Relé
const int pinBuzzer = 8; // Pino Buzzer
const int valDesarm = 100; // Aumente o valor para reduzir falsos positivos

int valor = 0;

void setup() {
  Serial.begin(9600); // Inicia porta Serial em 9600 baud
  pinMode(pinRele, OUTPUT);
  pinMode(pinBuzzer, OUTPUT);
  digitalWrite(pinRele, LOW); // Garante que o relé está desligado no início
  noTone(pinBuzzer); // Garante que o buzzer está desligado no início
}

void loop() {
  valor = analogRead(pinSensor); // Faz a leitura da entrada do sensor
  valor = map(valor, 0, 1023, 0, 100); // Faz a conversão da variável para porcentagem
  Serial.println(valor); // Escreve o valor na porta Serial

  if (valor >= valDesarm) { // Condição, se valor continuar maior que valDesarm faça:
    digitalWrite(pinRele, HIGH); // Liga relé para solenóide
    Serial.println("ALARM"); // Envia "ALARM" pela porta serial
    gerarAlarmeBuzzer(); // Função para gerar som contínuo no buzzer
    delay(100); // Pequeno atraso antes da próxima verificação
  } else {
    digitalWrite(pinRele, LOW); // Caso contrário, mantenha o relé desligado
    noTone(pinBuzzer); // Para o som do buzzer
  }

  delay(1000); // Aguardar 1 segundo antes de fazer a próxima leitura
}

void gerarAlarmeBuzzer() {
  for (int x = 0; x < 180; x++) {
    float sinVal = (sin(x * (3.1412 / 180)));
    int toneVal = 2000 + (int(sinVal * 1000));
    analogWrite(pinBuzzer, toneVal); // Define a amplitude para 255 (máximo)
    delay(2);
  }
}
